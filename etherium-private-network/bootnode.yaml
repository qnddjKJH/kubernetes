apiVersion: v1
kind: Service
metadata:
  name: eth-bootnode
  namespace: eth-project
spec:
  selector:
    app: eth-bootnode
  clusterIP: None
  ports:
  - name: discovery-udp
    protocol: UDP
    port: 30301
    #targetPort: 30301
  - name: discovery-tcp
    protocol: TCP
    port: 30301
  - name: http
    protocol: TCP
    port: 8080
    #targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eth-bootnode
  namespace: eth-project
  labels:
    app: eth-bootnode
spec:
  selector:
    matchLabels:
      app: eth-bootnode
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: eth-bootnode
    spec:
      containers:
      - name: bootnode
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "0.25"
          limits:
            cpu: ".5"
            memory: 100M
        command: ["/bin/sh"]
        args:
        - "-c"
        - "bootnode -nodekey /etc/bootnode/node.key -verbosity 4"
        volumeMounts:
        - name: data
          mountPath: /etc/bootnode
        ports:
        - name: discovery-udp
          containerPort: 30301
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30301
          protocol: TCP
      - name: bootnode-server
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "0.25"
          limits:
            cpu: ".5"
            memory: 100M
        command: ["/bin/sh"]
        args:
        - "-c"
        - |
          while [ 1 ]; do
            echo -e "HTTP/1.1 200 OK\n\nenode://$(bootnode -writeaddress --nodekey=/etc/bootnode/node.key)@$(POD_IP):30301" | nc -l -v -p 8080 || break
          done;
        volumeMounts:
        - name: data
          mountPath: /etc/bootnode
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: http
          containerPort: 8080
      initContainers:
      - name: generate-key
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "bootnode -genkey /etc/bootnode/node.key"
        volumeMounts:
        - name: data
          mountPath: /etc/bootnode
      volumes:
      - name: data
        emptyDir: {}

