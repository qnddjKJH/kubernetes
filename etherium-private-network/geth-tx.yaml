apiVersion: v1
kind: Service
metadata:
  name: eth-geth-tx
  namespace: eth-project
  labels:
    app: eth-geth-tx
spec:
  selector:
    app: eth-geth-tx
  type: ClusterIP
  ports:
  - name: rpc
    port: 8545
  - name: ws
    port: 8546

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eth-geth-tx
  namespace: eth-project
  labels:
    app: eth-geth-tx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: eth-geth-tx
  template:
    metadata:
      labels:
        app: eth-geth-tx
    spec:
      containers:
      - name: geth-tx
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: ".25"
            memory: 250Mi
          limits:
            cpu: ".5"
            memory: 750Mi
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth --bootnodes=`cat /root/.ethereum/bootnodes` --rpc --rpcapi=eth,net,web3 --rpccorsdomain='*' --ws --networkid=${NETWORK_ID} --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC} --verbosity=5 --nat extip:${POD_IP}"
        env:
        - name: ETHSTATS_SVC
          value: eth-ethstats.dcp
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: eth-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: eth-geth
              key: networkid
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: rpc
          containerPort: 8545
        - name: ws
          containerPort: 8546
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      initContainers:
      - name: init-genesis
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        args:
        - "init"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: config
          mountPath: /var/geth
      - name: get-bootnodes
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "apk add --no-cache curl; \nCNT=0; \necho \"retrieving bootnodes from $(BOOTNODE_REGISTRAR_SVC)\"; \nwhile [ $CNT -le 90 ]; do \n  curl -m 5 -s $(BOOTNODE_REGISTRAR_SVC):8080 | xargs echo -n >> /geth/bootnodes; \n  if [ -s /geth/bootnodes ]; then \n    cat /geth/bootnodes; \n    exit 0; \n  fi; \n  echo \"no bootnodes found. retrying $CNT...\"; \n  sleep 2 || break; \n  CNT=$((CNT+1)); \ndone; \necho \"WARNING. unable to find bootnodes. continuing but geth may not be able to find any peers.\"; \nexit 0;\n"
        env:
        - name: BOOTNODE_REGISTRAR_SVC
          value: eth-bootnode.eth-project.svc.cluster.local
        volumeMounts:
        - name: data
          mountPath: /geth
      volumes:
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: eth-geth
